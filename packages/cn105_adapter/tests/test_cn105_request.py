import unittest
import cn105_adapter

class TestHttpServer(unittest.TestCase):
    def test_cn105_connect_request(self):
        req = cn105_adapter.CN105ConnectRequest()
        self.assertTrue(str(req) == "CN105Request(type=0x5a, payload=[0xca, 0x01])")
        self.assertTrue(req.raw == [0xfc, 0x5a, 0x01, 0x30, 0x02, 0xca, 0x01, 0xa8])


    def test_cn105_get_data_request(self):
        req = cn105_adapter.CN105GetDataRequest()
        self.assertTrue(str(req) == "CN105Request(type=0x42, payload=[0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])")
        self.assertTrue(req.raw == [0xfc, 0x42, 0x01, 0x30, 0x10, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7b])

        req = cn105_adapter.CN105GetDataRequest(rtype=0x03)
        self.assertTrue(str(req) == "CN105Request(type=0x42, payload=[0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])")
        self.assertTrue(req.raw == [0xfc, 0x42, 0x01, 0x30, 0x10, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7a])

        
    def test_cn105_set_data_request(self):
        req = cn105_adapter.CN105SetDataRequest(data={"power": 1})
        self.assertTrue(str(req) == "CN105Request(type=0x41, payload=[0x02, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])")
        self.assertTrue(req.raw == [0xfc, 0x41, 0x01, 0x30, 0x10, 0x02, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7a])

        req = cn105_adapter.CN105SetDataRequest(data={"mode": 2})
        self.assertTrue(str(req) == "CN105Request(type=0x41, payload=[0x02, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])")
        self.assertTrue(req.raw == [0xfc, 0x41, 0x01, 0x30, 0x10, 0x02, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78])

        req = cn105_adapter.CN105SetDataRequest(data={"tempSet": 3})
        self.assertTrue(str(req) == "CN105Request(type=0x41, payload=[0x02, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])")
        self.assertTrue(req.raw == [0xfc, 0x41, 0x01, 0x30, 0x10, 0x02, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75])

        req = cn105_adapter.CN105SetDataRequest(data={"fan": 4})
        self.assertTrue(str(req) == "CN105Request(type=0x41, payload=[0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])")
        self.assertTrue(req.raw == [0xfc, 0x41, 0x01, 0x30, 0x10, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70])

        req = cn105_adapter.CN105SetDataRequest(data={"vane": 5})
        self.assertTrue(str(req) == "CN105Request(type=0x41, payload=[0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])")
        self.assertTrue(req.raw == [0xfc, 0x41, 0x01, 0x30, 0x10, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67])

        req = cn105_adapter.CN105SetDataRequest(data={"dir": 6})
        self.assertTrue(str(req) == "CN105Request(type=0x41, payload=[0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00])")
        self.assertTrue(req.raw == [0xfc, 0x41, 0x01, 0x30, 0x10, 0x02, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF6])

        req = cn105_adapter.CN105SetDataRequest(data={"power": 1, "mode": 3, "tempSet": 3})
        self.assertTrue(str(req) == "CN105Request(type=0x41, payload=[0x02, 0x07, 0x00, 0x01, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])")
        self.assertTrue(req.raw == [0xfc, 0x41, 0x01, 0x30, 0x10, 0x02, 0x07, 0x00, 0x01, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6E])

        